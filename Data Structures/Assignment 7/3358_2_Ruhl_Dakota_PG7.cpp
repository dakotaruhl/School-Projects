//Roster Numbers: Dakota Ruhl(43) / Kenneth Omo (34)
//
//Authors: Dakota Ruhl and Kenneth Omo
//Due Date: 4/26/2017
//Programming Assignment #7
//
//Spring 2017 - CS 3358 - 252
//Instructor: Husain Gholoom
//
//This program uses an array to do a series of functions. It will test
//a hasing function to store, add, or delete elements in the array.

#include <iostream>
#include <ctime>
#include <cstdlib>
#include <iomanip>

using namespace std;

class hashArray
{
    private:
        int mArray[30],         //Array to store 30 values
            collision = 0,      //Collision counter
            empt = 0;           //Non-collision counter

    public:
        void displayArray();    //To display all 30 values in array
        void arraySearch(int);  //Linear search function
        void arrayInsert(int);  //Insert numbers from user
        void arrayDelete(int);  //Delete numbers from user
        void arrayPopulate();   //Fill array with -1
        void arrayRandom();     //Generate 15 random numbers and store
        void statistics();      //Display function for collisions occured

};

void hashArray::displayArray()
{
    cout << "Generated Array: " << endl;
    for (int i = 0; i < 15; i++)
    {
        cout << left << setw(3) << mArray[i]<< "  ";
    }
    cout << endl;
    for (int i = 15; i < 30; i++)
    {
        cout << left << setw(3) << mArray[i]<< "  ";
    }
    cout << endl << endl;
}

void hashArray::arraySearch(int target)
{
    bool found = false;             //bool to determine if target is found
    int index;                      //Index of array generated by hashing

    for (int i = 0; i < 30; i++)
    {
        if (mArray[i] == target)
        {
            found = true;
            index = i + 1;
            break;
        }
    }
    if (found && target != -1)
    {
        cout << "Number has been found at index: " << index << endl;
    }
    else
    {
        cout << "Number was not found" << endl;
    }
}

void hashArray::arrayInsert(int target)
{
    int index = (target % 30);         //Index of array generated by hashing
    int counter = 0;                   //for cout statement

    int spaceCounter = 0;              //to determine if array is full.
    for (int i = 0; i<30; i++)
    {
        if (mArray[i] == -1)
        {
            spaceCounter++;
        }
    }
    if (spaceCounter == 0)
    {
        cout << "Array is full. Please delete an element." << endl;
        return;
    }


    if (mArray[index] == -1)
    {
        mArray[index] = target;
        empt++;
    }
    else
    {
        while (mArray[index] != -1)
        {
            index = (target++) % 30;
            counter++;
            if (index > 30)             //loop to front of array if exceed size
            {
                index = 0;
                while (mArray[index] != 1)
                {
                    index++;
                }
            }
            collision++;
        }
        mArray[index] = target - counter;
    }

    cout << target - counter << " has been added to index location " << index+1
         << " using the hashing function." << endl << "There are "
         << spaceCounter -1<< " spaces left." << endl;
}

void hashArray::arrayDelete(int target)
{
    int index = (target % 30);          //Index of array generated by hashing

    int counter = 0;                    //counter will not exceed 30 (size of
                                        //the array) to determine if target
                                        //is not in the array.

    if (mArray[index] == target)
    {
        mArray[index] = -1;
        cout << target << " has been deleted from index location " << index+1
         << " using the hashing function." << endl;
    }
    else
    {
        while (mArray[index] != target && counter < 30)
        {
            index = (target+1) % 30;
            counter++;
        }
        if (mArray[index] == target)
        {
            mArray[index] = -1;
            cout << target << " has been added to index location " << index+1
                 << " using the hashing function." << endl;
        }
        else
        {
            cout << target << " was not found in the array." << endl;
        }
    }

}

void hashArray::arrayPopulate()
{
    //fill each value with -1
    for (int i = 0; i < 30; i++)
    {
        mArray[i] = -1;
    }
}

void hashArray::arrayRandom()
{
    int num,                        //temp variable to store random number
        index;                      //index generated by hasing fucntion
    srand(0);
    for (int i = 0; i < 15; i++)
    {
        num = rand()%400 + 100;
        index = num % 30;
        if (mArray[index] == -1)
        {
            mArray[index] = num;
            empt++;
        }
        else
        {
            while (mArray[index] != -1)
            {
                num++;                  //these 2 lines are equiv to
                index = (num % 30);   //(num + 1) % size
                collision++;
            }
            mArray[index] = num;
        }
    }
}

void hashArray::statistics()
{
    cout << endl << "Number of empty spaces filled without collision: " << empt
       << endl << "Number of collisions occured when filling non-empty spaces: "
         << collision << endl;
}

int main()
{
    int userInput,                      //input from user for selecting menu
        target;                         //various inputs from user to pass
                                        //into functions
    hashArray a;                        //class object decleration

    //fill each value with -1
    a.arrayPopulate();

    //populate half the array with random
    a.arrayRandom();

    //Display introduction and array
    cout << "Welcome to my hashing program." << endl;
    a.displayArray();

    //Menu display
    do
    {
        cout << "     1. Display the generated array." << endl
             << "     2. Search for a number (between 1-500) in the array."
        << endl << "     3. Insert a new number (bwetween 1-500) in the array"
             << endl << "     4. Delete a number (between 1-500) in the array."
             << endl << "     9. End the program." << endl;
        cin >> userInput;
        while ( !cin || (userInput > 4 && userInput !=9) )
        {
            cin.clear();
            cin.ignore();
            cout << "     Must be an integer. Try again: ";
            cin >> userInput;
        }


        switch (userInput)
        {
            case 1: a.displayArray();
                    break;
            case 2: cout << "Enter value to search: ";
                    cin >> target;
                    while (!cin || target<1 || target >500)
                    {
                        cin.clear();
                        cin.ignore();
                        cout << "     Must be an integer 1-500, try again: ";
                        cin >> target;
                    }
                    a.arraySearch(target);
                    break;
            case 3: cout << "Enter value to add to array: ";
                    cin >> target;
                    while (!cin || target<1 || target >500)
                    {
                        cin.clear();
                        cin.ignore();
                        cout << "     Must be an integer 1-500, try again: ";
                        cin >> target;
                    }
                    a.arrayInsert(target);
                    break;
            case 4: cout << "Enter value to delete: ";
                    cin >> target;
                    while (!cin || target<1 || target >500)
                    {
                        cin.clear();
                        cin.ignore();
                        cout << "     Must be an integer 1-500, try again: ";
                        cin >> target;
                    }
                    a.arrayDelete(target);
                    break;

        }
    }while (userInput != 9);
    a.statistics();
    cout << endl
         << "This program was implemented by Dakota Ruhl and Kenneth Omo.";
    return 0;

}

